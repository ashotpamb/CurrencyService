// <auto-generated />
using System;
using ExchangeData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeData.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240520064844_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExchangeData.Entities.Archive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Archives");
                });

            modelBuilder.Entity("ExchangeData.Entities.ExchangeRate", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<bool>("CBA_HasData")
                        .HasColumnType("bit");

                    b.Property<long?>("CodeID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Diff")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("RateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CodeID");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("ExchangeData.Entities.IsoCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IsoCodes");
                });

            modelBuilder.Entity("ExchangeData.Entities.ExchangeRate", b =>
                {
                    b.HasOne("ExchangeData.Entities.IsoCode", "ISO")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("CodeID");

                    b.Navigation("ISO");
                });

            modelBuilder.Entity("ExchangeData.Entities.IsoCode", b =>
                {
                    b.Navigation("ExchangeRates");
                });
#pragma warning restore 612, 618
        }
    }
}
